<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CLOSE_GAME" xml:space="preserve">
    <value>关闭游戏之后才可以看上次的战斗哦&gt;_&lt;</value>
  </data>
  <data name="CLOSE_REPLAY" xml:space="preserve">
    <value>关闭回放功能</value>
  </data>
  <data name="CLOSE_TRAINING" xml:space="preserve">
    <value>关闭训练房</value>
  </data>
  <data name="DOUBLE_CHECK" xml:space="preserve">
    <value>真的要使用这项功能么？</value>
  </data>
  <data name="ENABLE_REPLAY_FIRST" xml:space="preserve">
    <value>请先打开回放功能。</value>
  </data>
  <data name="ENJOY_GAME" xml:space="preserve">
    <value>享受每一次战斗吧！</value>
  </data>
  <data name="MORE_FUNCTIONS" xml:space="preserve">
    <value>这只是一个辅助用的小程序。它可以启动回放功能，开启一次性的训练房和其他的一些小功能。如果需要更多的功能，请下载ASLAIN的MOD。</value>
  </data>
  <data name="NO_BACKUP" xml:space="preserve">
    <value>还没有备份文件哦</value>
  </data>
  <data name="NO_HACKING" xml:space="preserve">
    <value>请不要修改数据文件</value>
  </data>
  <data name="NO_MOD" xml:space="preserve">
    <value>没有要删除的MOD。</value>
  </data>
  <data name="OPEN_REPLAY" xml:space="preserve">
    <value>启动回放功能</value>
  </data>
  <data name="OPEN_TRIANING" xml:space="preserve">
    <value>开启训练房</value>
  </data>
  <data name="PASTE_PATH" xml:space="preserve">
    <value>请将游戏路径复制到下面的文本框中。</value>
  </data>
  <data name="PASTE_VALID_PATH" xml:space="preserve">
    <value>请复制一个有效的路径。</value>
  </data>
  <data name="PATH_NOT_CORRECT" xml:space="preserve">
    <value>这个路径不正确。。。 姆姆姆&gt;_&lt; </value>
  </data>
  <data name="REMOVE_MODS" xml:space="preserve">
    <value>真的要删除所有安装的MOD么？</value>
  </data>
  <data name="STRANGE_BEHAVIOUR" xml:space="preserve">
    <value>如果无法正常进行游戏，请尝试这项功能。</value>
  </data>
  <data name="THX_FOR_USING" xml:space="preserve">
    <value>感谢你使用这个小程序 &gt;_&lt;</value>
  </data>
  <data name="UNINSTALL_THIS_PROGRAM" xml:space="preserve">
    <value>删除游戏</value>
  </data>
  <data name="UNINSTALL_THIS_PROGRAM_TEXT" xml:space="preserve">
    <value>真的要删除这个游戏么 &gt;_&lt;</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>警告！</value>
  </data>
  <data name="WELCOME" xml:space="preserve">
    <value>欢迎哦 &gt;_&lt;</value>
  </data>
  <data name="WORSE_SERVER" xml:space="preserve">
    <value>最差的服务器！</value>
  </data>
</root>